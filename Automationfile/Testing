import unittest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import Select
import time


class SauceDemo(unittest.TestCase):

    def setUp(self):
        self.driver = webdriver.Chrome()
        self.driver.get("https://www.saucedemo.com/")
        self.driver.maximize_window()

    def test_e_store_flow(self):
        driver = self.driver

        driver.find_element(By.ID, "user-name").send_keys("standard_user")
        driver.find_element(By.ID, "password").send_keys("secret_sauce")
        driver.find_element(By.ID, "login-button").click()

        self.assertEqual(driver.title, "Swag Labs", "Page title mismatch after login")

        sort_dropdown = Select(driver.find_element(By.CLASS_NAME, "product_sort_container"))
        sort_dropdown.select_by_value("lohi")
        time.sleep(2)  # wait for sorting

        prices = driver.find_elements(By.CLASS_NAME, "inventory_item_price")
        price_values = [float(price.text.replace("$", "")) for price in prices]
        self.assertEqual(price_values, sorted(price_values), "Products not sorted by price")

        driver.find_elements(By.CLASS_NAME, "btn_inventory")[0].click()
        driver.find_element(By.CLASS_NAME, "shopping_cart_link").click()

        cart_price = driver.find_element(By.CLASS_NAME, "inventory_item_price").text
        cart_price_value = float(cart_price.replace("$", ""))
        self.assertEqual(cart_price_value, price_values[0], "Price in cart does not match selected product")

        driver.find_element(By.ID, "checkout").click()
        driver.find_element(By.ID, "first-name").send_keys("Sushrut")
        driver.find_element(By.ID, "last-name").send_keys("Mishra")
        driver.find_element(By.ID, "postal-code").send_keys("411033")
        driver.find_element(By.ID, "continue").click()

        item_total = driver.find_element(By.CLASS_NAME, "summary_subtotal_label").text
        item_total_value = float(item_total.replace("Item total: $", ""))
        self.assertEqual(item_total_value, cart_price_value, "Item total mismatch at checkout")

        driver.find_element(By.ID, "finish").click()

        success_msg = driver.find_element(By.CLASS_NAME, "complete-header").text
        self.assertIn("ORDER SUCCESS", success_msg.upper(), "Success message not found")

        print("Test completed successfully.")

    def tearDown(self):
        self.driver.quit()


if __name__ == "__main__":
    unittest.main()
